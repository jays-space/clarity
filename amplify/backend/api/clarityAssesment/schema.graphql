# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

enum Gender {
  FEMALE
  MALE
}

type Child @model @auth(rules: [{allow: public}]) {
  id: ID!
  firstName: String!
  lastName: String
  dob: AWSDate
  gender: Gender!
  userID: ID! @index(name: "byUser")
}

type Coords {
  lat: Float
  lng: Float
}

type Address {
  city: String
  country: String
  fullAddress: String!
  coords: Coords
  province: String
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  firstName: String!
  lastName: String
  email: AWSEmail!
  hasChildren: Boolean!
  physicalAddress: Address
  isAdmin: Boolean!
  Children: [Child] @hasMany(indexName: "byUser", fields: ["id"])
  Cart: Cart @hasOne
  dob: AWSDate
}

type Product @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  description: String!
  price: Float!
  units: Int!
  pcs: Int!
  url: String!
  Collection: Collection @belongsTo
  Carts: [Cart] @manyToMany(relationName: "ProductsCart")
  collectionID: ID! @index(name: "byCollection")
}

type Collection @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  url: String!
  nofProducts: Int!
  Products: [Product] @hasMany(indexName: "byCollection", fields: ["id"])
}

type Cart @model @auth(rules: [{allow: public}]) {
  id: ID!
  Products: [Product] @manyToMany(relationName: "ProductsCart")
  User: User @belongsTo
}