type Wishlist @model @auth(rules: [{ allow: public }]) {
  id: ID!
  User: User @belongsTo
  Products: [Products] @manyToMany(relationName: "ProductsWishlist")
}

type Cart @model @auth(rules: [{ allow: public }]) {
  id: ID!
  Products: [Products] @manyToMany(relationName: "ProductsCart")
  User: User @belongsTo
}

type Products @model @auth(rules: [{ allow: public }]) {
  id: ID!
  name: String!
  description: String
  price: Float!
  units: Int!
  quantity: Int!
  pcs: Int!
  url: [String]
  Carts: [Cart] @manyToMany(relationName: "ProductsCart")
  Wishlists: [Wishlist] @manyToMany(relationName: "ProductsWishlist")
  createdBy: ID! @index(name: "byUser")
}

type Coords {
  lat: Float!
  lng: Float!
}

type Address {
  city: String
  country: String
  fullAddress: String!
  coords: Coords!
  province: String
}

enum Gender {
  FEMALE
  MALE
}

type Child @model @auth(rules: [{ allow: public }]) {
  id: ID!
  firstName: String!
  lastName: String
  dob: AWSDateTime!
  gender: Gender!
  parentID: ID! @index(name: "byUser")
}

type User @model @auth(rules: [{ allow: public }]) {
  id: ID!
  firstName: String!
  lastName: String
  email: AWSEmail!
  dob: AWSDate
  hasChildren: Boolean!
  Children: [Child] @hasMany(indexName: "byUser", fields: ["id"])
  physicalAddress: Address
  Cart: Cart @hasOne
  Wishlist: Wishlist @hasOne
  isAdmin: Boolean!
}
